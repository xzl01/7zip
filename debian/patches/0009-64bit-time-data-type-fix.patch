From: YOKOTA Hiroshi <yokota.hgml@gmail.com>
Date: Thu, 11 Apr 2024 14:28:36 +0900
Subject: 64bit time data type fix
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

Forwarded: https://sourceforge.net/p/sevenzip/patches/435/

Use C++17 function timespec_get() to get current UTC time.

On 32bit architecture (armel,armhf,m68k,powerpc,sh4):
```
../../../Windows/TimeUtils.cpp: In function ‘void NWindows::NTime::GetCurUtc_FiTime(timespec&)’:
../../../Windows/TimeUtils.cpp:264:30: error: conversion from ‘__suseconds64_t’ {aka ‘long long int’} to ‘long int’ may change value [-Werror=conversion]
  264 |     ft.tv_nsec = now.tv_usec * 1000;
      |                  ~~~~~~~~~~~~^~~~~~
```
---
 CPP/Windows/TimeUtils.cpp | 9 +++------
 1 file changed, 3 insertions(+), 6 deletions(-)

diff --git a/CPP/Windows/TimeUtils.cpp b/CPP/Windows/TimeUtils.cpp
index a083683..76dacd4 100644
--- a/CPP/Windows/TimeUtils.cpp
+++ b/CPP/Windows/TimeUtils.cpp
@@ -2,6 +2,8 @@
 
 #include "StdAfx.h"
 
+#include <ctime>
+
 #ifndef _WIN32
 #include <sys/time.h>
 #endif
@@ -257,12 +259,7 @@ void GetCurUtc_FiTime(CFiTime &ft) throw()
  #else
   
   FiTime_Clear(ft);
-  struct timeval now;
-  if (gettimeofday(&now, NULL) == 0)
-  {
-    ft.tv_sec = now.tv_sec;
-    ft.tv_nsec = now.tv_usec * 1000;
-  }
+  std::timespec_get(&ft, TIME_UTC);
 
  #endif
 }
